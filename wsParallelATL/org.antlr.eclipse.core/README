Core for ANTLR 2.7.6

Features:
  - project nature with incremental builder for ANTLR grammar files
  - conversion of ANTLR tool error output into resource markers
  - grammar source debugging
  - antlr project icon
  - improved error reporting
  - allow all command-line options to be specified in grammar property page
  - grammar properties are now stored in a .antlr-eclipse file so they can be checked in
  - fixed tab display for Eclipse 3.1
  - automatically add jars for ANTLR and ANTLR XML support to classpath (eclipse >=3.1 only)
  - automatically updates ANTLR_HOME and ANTLR_XML_HOME classpath variable definitions in eclipse (eclipse >=3.1 only)
  - added command-line parameter display to generated files
  - all generated files (.java, .txt, .smap) now have antlr property pages 
  - grammar compilation restricted to source directories if inside java project  
  - automatic recognition of ANTLR XML plugin, registering it with ANTLR
  - automatic call to "organize imports" on generated code
  - "clean" command in eclipse removes all ANTLR-generated code
  - when building, generated files for deleted/renamed grammars are deleted


Requirements:
  - Eclipse 3.0 or 3.1
  - ANTLR plugin 'org.antlr_2.7.6'

NOTE: To rebuild the antlrsettings.antxr file, you must install the antxr plugin
      for eclipse (http://javadude.com/tools/antxr) and toggle the ANTXR nature
      of this project on.

Todo:
  - save grammar file if IObjectActionDelegate 'Compile Grammar' is invoked

History:
0.1.0
	- initial version -> not published
0.1.1
	- first public version
0.1.2
	- AntrlTool uses now own implementation of antlr.ToolErrorHandler
	  (parsable error messages from Java code generator)
0.1.3
	- derived flag is set for generated files
	- better ANTLR error parsing (filtered "aborting grammar" messages)
	- added debug support (configurable via ".options" file)
	- incremental project builder is now added/removed correctly
0.1.4
	- during plugin startup "*.g" is added to JDT builder's copy
	  exclusion filter
	- every file generated by ANTLR is marked with persistent property
	  holding the according ANTLR grammar file - this is used in
	  UI plugin by the label decorator
1.0.0
	- updated to ANTLR 2.7.2 final
1.0.1
	- outline grammar now supports iso-8859-15 characters and parser exceptions
	  are recognized too
	- added resource properties for ANTLR compiler's output path and list of
	  super grammar files
	- builder now supports ANTLR compiler options '-o' and '-glib'
1.0.2
	- builder now supports ANTLR compiler option '-glib' to be set via a
	  single-line comment in the grammar file (// -glib <super grammar file>)
1.0.3
	- fixed bug in builder (NPE while checking for "*.g" file)
	- fixed bug in overview parser (NPE while parsing token section)
	- now the outline parser supports doc comments (grammars and rules only)

(no history present from 1.0.3 to 4.0.0)

4.0.0 (Scott Stanchfield)
    - updated to ANTLR 2.7.6
    - grammar source debugging
    - antlr project icon
    - improved error reporting
    - allow all command-line options to be specified in grammar property page
    - grammar properties are now stored in a .antlr-eclipse file so they can be checked in
    - fixed tab display for Eclipse 3.1
    - automatically add jars for ANTLR and ANTLR XML support to classpath (eclipse >=3.1 only)
    - automatically updates ANTLR_HOME and ANTLR_XML_HOME classpath variable definitions in eclipse (eclipse >=3.1 only)
    - added command-line parameter display to generated files
    - all generated files (.java, .txt, .smap) now have antlr property pages 
    - grammar compilation restricted to source directories if inside java project  
    - automatic recognition of ANTLR XML plugin, registering it with ANTLR
    - automatic call to "organize imports" on generated code
    - "clean" command in eclipse removes all ANTLR-generated code
        (old invalid code generated for a grammar is removed when a grammar
         is recompiled)
    - when building, generated files for deleted/renamed grammars are deleted

Cheers,
Torsten Juergeleit
Scott Stanchfield

mailto://torsten.juergeleit@t-online.de
mailto://scott@javadude.com
